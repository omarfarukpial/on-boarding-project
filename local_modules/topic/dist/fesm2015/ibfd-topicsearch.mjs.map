{"version":3,"file":"ibfd-topicsearch.mjs","sources":["../../src/app/topic-search/service/taxtopics-provider.service.ts","../../src/app/topic-search/service/topic.service.ts","../../src/app/topic-search/directive/ptree-filter.directive.ts","../../src/app/topic-search/topic-search-panel/topic-search-panel.component.ts","../../src/app/topic-search/topic-search-panel/topic-search-panel.component.html","../../src/app/topic-search/model/topic-service-config.ts","../../src/app/topic-search/topic-search.module.ts","../../ibfd-topicsearch.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface TaxtopicGroupInfo {\n  totalGroups: number;\n  groups: TaxtopicGroups;\n}\n\ninterface TaxtopicGroups {\n  [id: string]: any[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaxtopicsProviderService {\n\n  private taxtopicsGroupProvider = new BehaviorSubject<TaxtopicGroupInfo>({totalGroups: 0, groups: {}});\n  constructor() {}\n\n\n  public addTaxtopicsGroup(taxonomy: any[], id: string) {\n\n    const groups = {...this.taxtopicsGroupProvider.value.groups, [id]: taxonomy};\n\n    this.taxtopicsGroupProvider.next(\n      {\n        totalGroups: Object.keys(groups).length,\n        groups\n      }\n    );\n  }\n\n  public getTaxtopicGroupInfo(): Observable<TaxtopicGroupInfo> {\n    return this.taxtopicsGroupProvider.asObservable();\n  }\n\n  public getTaxtopics(id: string): Observable<any[]> {\n    return this.getTaxtopicGroupInfo().pipe(\n      map(tg => tg.groups[id])\n    );\n  }\n\n  public isTaxtopicsGroupExist(id: string): Observable<boolean> {\n    return this.getTaxtopicGroupInfo().pipe(map(tg => !!tg.totalGroups && !!tg.groups[id]));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { EndecapodService, SearchResult, EdcaUrlSerializer } from '@ibfd/endecapod';\nimport { Subject, Observable, BehaviorSubject, ObservableInput,  of } from 'rxjs';\nimport { catchError, filter, map, first, concatMap, take } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash-es';\nimport { TopicServiceConfig } from '../model/topic-service-config';\nimport { TopicConfig } from '../model/topic-config';\nimport { TaxtopicsProviderService } from './taxtopics-provider.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicService {\n  private topicTreeProvider: Subject<any>;\n  private docTopicTreeProvider: Subject<any>;\n  private error: BehaviorSubject<Error | boolean> = new BehaviorSubject(false);\n  private initTopicSvc: EndecapodService;\n  private _endecaUrl: string;\n  private _awareUrl: string;\n  private _suppressedChips: number[];\n  private topicConfig: TopicConfig;\n\n  constructor(\n    private urlSerializer: EdcaUrlSerializer,\n    private taxtopicProviderSvc: TaxtopicsProviderService,\n    router: Router,\n     http: HttpClient,\n  ) {\n    this.initTopicSvc = new EndecapodService(http, router, urlSerializer) ;\n  }\n\n  public registerConfig(config: TopicServiceConfig): void {\n    this.topicConfig = config.topicConfig;\n    this._endecaUrl = config.endecapodUrl;\n    this._awareUrl = config.awareUrl;\n    this._suppressedChips = config.suppressedChips;\n  }\n\n  public loadInitTaxTopics() {\n    this.shouldFetchInitialTaxtopics()\n      .pipe(filter(Boolean), take(1))\n      .subscribe(() =>  this.fetchInitialTaxtopics());\n\n    this.getTopicValues(this.initTopicSvc.Result())\n      .pipe(\n        map(res => {\n          const topics = res.topics;\n          Object.keys(topics).map(e => topics[e])\n            .forEach(obj => obj['selectable'] = false);\n          return topics;\n        }),\n        take(1),\n        catchError(this.handle_error)\n      )\n      .subscribe(\n        t => {\n          this.taxtopicProviderSvc.addTaxtopicsGroup(t, this.topicConfig.id);\n        }\n      );\n    return true;\n  }\n\n  private shouldFetchInitialTaxtopics(): Observable<boolean> {\n    const initQuery = this.topicConfig.query;\n    if (!initQuery || initQuery.length === 0) {\n      return of(true);\n    }\n    return this.taxtopicProviderSvc.isTaxtopicsGroupExist(this.topicConfig.id)\n      .pipe(\n        map(exist => !exist)\n      );\n  }\n\n  private fetchInitialTaxtopics() {\n    this.initTopicSvc.setName('TopicTreeInitService');\n    this.initTopicSvc.setURL(this._endecaUrl, this._awareUrl);\n    this.initTopicSvc.RegisterParams(\n      this.urlSerializer.parse('?' + this.topicConfig.query).queryParamMap\n    );\n    this.initTopicSvc.DoSearch();\n  }\n\n  buildTopicTree(searchedTopics: Object, expandedNodes: Set<number>) {\n    this.taxtopicProviderSvc.getTaxtopics(this.topicConfig.id)\n    .pipe(filter(taxtopics => !!taxtopics))\n    .subscribe({\n      next: taxtopics => {\n        // Updating taxonomy taxtopics by searched topics from endeca\n        const clonedTaxtopics = cloneDeep(taxtopics);\n        this.updateAvailableTopics(clonedTaxtopics, Object.keys(searchedTopics['topics']));\n        this.topicTreeProvider.next(this.buildPrimeNgTree(clonedTaxtopics, searchedTopics['chips'], expandedNodes));\n      },\n      error: err => { this.error.next(err); }\n    });\n  }\n\n  buildDocTopicTree(topicCodes: string[]) {\n    this.taxtopicProviderSvc.getTaxtopics(this.topicConfig.id)\n    .pipe(filter(taxtopics => !!taxtopics))\n    .subscribe({\n      next: taxtopics => {\n        const clonedTaxtopics = cloneDeep(taxtopics);\n        this.updateAvailableDocTopics(clonedTaxtopics, topicCodes);\n        const docTopicTree = this.buildPrimeNgTree(clonedTaxtopics, [], new Set()).data;\n        this.docTopicTreeProvider.next(docTopicTree);\n      },\n      error: err => { this.error.next(err); }\n    });\n  }\n\n  private updateAvailableDocTopics(taxtopics: Object, topicCodes: string[]) {\n    topicCodes.forEach(topicCode => {\n      const taxtopic = taxtopics[topicCode];\n      if (taxtopic) {\n        taxtopic.selectable = true;\n        let parentLabel = this.getTaxtopicParentLabel(topicCode);\n        while (parentLabel.lastIndexOf('_') > 0) {\n          const parent = taxtopics[parentLabel];\n          if (parent) {\n            parent.selectable = true;\n          }\n          parentLabel = this.getTaxtopicParentLabel(parentLabel);\n        }\n      }\n    });\n  }\n\n  private updateAvailableTopics(taxtopics: Object, topicCodes: string[]) {\n    topicCodes.forEach(topicCode => {\n      const taxtopic = taxtopics[topicCode];\n      if (taxtopic) {\n        taxtopic.selectable = true;\n      }\n    });\n  }\n\n  getTopicTree(): Observable<any> {\n    return (this.topicTreeProvider = this.topicTreeProvider || new Subject<any>()).asObservable();\n  }\n\n  getDocTopicTree(): Observable<any> {\n    return (this.docTopicTreeProvider = this.docTopicTreeProvider || new Subject<any>()).asObservable();\n  }\n\n  private buildPrimeNgTree(taxtopics: Object, chips: any[], expandedNodes: Set<number>) {\n    return Object.keys(taxtopics)\n    .map(e => taxtopics[e])\n    .reduce((acc, taxtopic) => {\n      const node = {\n        label: taxtopic['label'],\n        data: taxtopic['code'],\n        selectable: taxtopic['selectable'],\n        id: taxtopic['id'],\n        key: taxtopic['code']\n      };\n      if (chips.find(id => id === node.id)) {\n        acc.selected.push(node);\n      }\n      node['expanded'] = expandedNodes.has(node.id);\n      const parent = this.getTaxtopicParent(acc.data, this.getTaxtopicParentLabel(node.data));\n      if (parent) {\n        if (!parent['children']) {\n          parent['children'] = [];\n        }\n        node['parent'] = parent;\n        parent['children'].push(node);\n      } else {\n        acc.data.push(node);\n      }\n      return acc;\n    }, {data: [], selected: []});\n  }\n\n  private getTaxtopicParentLabel(tc: string) {\n    return tc.substring(0, tc.lastIndexOf('_'));\n  }\n\n  private getTaxtopicParent(acc: Object[], parentLabel: string) {\n    for (let i = 0; i < acc.length; i++) {\n      const taxtopic = acc[i];\n      if (taxtopic['data'] === parentLabel) {\n        return taxtopic;\n      }\n      if (taxtopic['children']) {\n        const taxtopicParent = this.getTaxtopicParent(taxtopic['children'], parentLabel);\n        if (taxtopicParent) {\n          return taxtopicParent;\n        }\n      }\n    }\n  }\n\n  searchTopics(topicExposeService: EndecapodService, endecapodService: EndecapodService): Observable<boolean | SearchResult> {\n    return endecapodService.runningquery().pipe(filter(rq => !!rq), concatMap(\n      q => {\n        topicExposeService.ExposeMultipleOnExisting(\n          endecapodService,\n          this.topicConfig.dimensions.map(dim => dim.id),\n          this.topicConfig.dimensions.map(dim => dim.name).join(',')\n        );\n        return this.getTopicValues(topicExposeService.Result());\n      }));\n  }\n\n  private getTopicValues(searchresult: Observable<boolean | SearchResult>) {\n    return searchresult.pipe(\n      filter(res => res instanceof SearchResult),\n      map((res: SearchResult) => {\n        let topics = [];\n        this.topicConfig.dimensions\n          .forEach(d => {\n            topics = topics.concat(res.getDimensionValuesOrAssociated(d));\n          });\n        const chips = res.getChips()\n          .filter(c1 => !this._suppressedChips.find(s => c1.parent.id === s))\n          .map(chip => chip.dimension.id);\n        return {topics: topics, chips: chips};\n      }),\n      first(),\n      map(obj => {\n        const topics = obj.topics\n          .map(topic => {\n            const name = topic.name;\n            return {\n              code: name.substring(0, name.indexOf(' ')),\n              label: name.substring(name.indexOf(' ') + 1),\n              id: topic.id\n            };\n          })\n          .sort((t1, t2) => t1.code.localeCompare(t2.code, undefined, { numeric: true, sensitivity: 'base' }))\n          .reduce((acc, topic) => {\n            return Object.assign(acc, { [topic['code']]: topic });\n          }, {});\n          return {topics: topics, chips: obj.chips };\n      }),\n      first(),\n      catchError(this.handle_error)\n    );\n  }\n\n  private handle_error(error: any, caught: Observable<any>): ObservableInput<{}> {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const err = error.json().then(json => JSON.stringify(json)) || '';\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    throw (new Error(errMsg));\n  }\n\n  getError(): Observable<Error | Boolean> {\n    return this.error.asObservable();\n  }\n}\n","import { Directive, Input, OnChanges, ElementRef } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Directive({\n  selector: '[ptreeFilter]'\n})\nexport class PtreeFilterDirective implements OnChanges {\n\n  private nodes: TreeNode[] = [];\n  @Input('ptreeFilter') set value(nodes: TreeNode[]) {\n    this.nodes = nodes || [];\n  }\n\n  constructor(private readonly elemRef: ElementRef) {}\n\n  ngOnChanges() {\n    setTimeout(() => this.disableFilter());\n  }\n\n  private disableFilter() {\n    const filterContainer = this.filterContainerElement;\n    if (!filterContainer) {\n      return;\n    }\n    const CLASS_IB_DISABLED = 'ib-disabled';\n    filterContainer.classList.remove(CLASS_IB_DISABLED);\n    if (!this.isAnyNodeSelectable()) {\n      filterContainer.classList.add(CLASS_IB_DISABLED);\n    }\n  }\n\n  private get filterContainerElement(): HTMLElement {\n    return this.elemRef.nativeElement.querySelector('div.ui-tree-filter-container');\n  }\n\n  private isAnyNodeSelectable(): boolean {\n    return this.nodes.some(n => n.selectable);\n  }\n\n}\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, Injectable } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { EndecapodService } from '@ibfd/endecapod';\nimport { Subscription } from 'rxjs';\nimport { MessageService } from 'primeng/api';\nimport { TopicService } from '../service/topic.service';\nimport { TopicServiceConfig } from '../model/topic-service-config';\n\n@Injectable()\nexport class TopicTreeExposeService extends EndecapodService {}\n\n@Component({\n  selector: 'app-topic-search-panel',\n  templateUrl: './topic-search-panel.component.html',\n  styleUrls: ['./topic-search-panel.component.css'],\n  providers: [\n    { provide: TopicTreeExposeService, useClass: TopicTreeExposeService }, TopicService\n  ]\n})\nexport class TopicSearchPanelComponent implements OnInit, OnDestroy {\n  private readonly DEFAULT_MSG_LIFE = 5000;\n  /** @internal */\n  @Input()\n  topicConfig: TopicServiceConfig;\n\n  /** @internal */\n  @Input()\n  loading = false;\n  @Output() isLoading: EventEmitter<boolean> = new EventEmitter();\n\n  /** @internal */\n  topicTreeNodes: TreeNode[];\n  /** @internal */\n  selectedTopics: TreeNode[];\n  /** @internal */\n  expandedNodeIds = new Set<number>();\n  /** @internal */\n  isPanelCollapsed = false;\n\n  private subscription: Subscription;\n\n  constructor(\n    private messageService: MessageService,\n    private topicService: TopicService,\n    private topicExposeService: TopicTreeExposeService,\n    private endecapodService: EndecapodService\n  ) {\n  }\n\n  ngOnInit() {\n    this.topicService.registerConfig(this.topicConfig);\n    this.topicExposeService.setName('TopicTreeService');\n    this.topicExposeService.setURL(this.topicConfig.endecapodUrl, this.topicConfig.awareUrl);\n    this.topicService.loadInitTaxTopics();\n\n    this.subscription = this.topicService.searchTopics(this.topicExposeService, this.endecapodService)\n      .subscribe({\n        next: searchedTopics => this.topicService.buildTopicTree(searchedTopics, this.expandedNodeIds),\n        error: err => this.messageService.add({ severity: 'error', summary: '', detail: err, life: this.DEFAULT_MSG_LIFE })\n      });\n\n    this.subscription.add(\n      this.topicService.getTopicTree().subscribe({\n        next: topicTree => {\n          this.topicTreeNodes = <TreeNode[]>topicTree.data;\n          this.selectedTopics = <TreeNode[]>topicTree.selected;\n          this.expandParents(this.selectedTopics);\n          this.isLoading.emit(false);\n        },\n        error: err => this.messageService.add({ severity: 'error', summary: '', detail: err, life: this.DEFAULT_MSG_LIFE })})\n    );\n\n    this.subscription.add(this.topicExposeService.Error().subscribe(\n      res => {\n        if (res) {\n          this.messageService.add({ severity: 'error', summary: '', detail: res.toString(), life: this.DEFAULT_MSG_LIFE });\n        }\n      },\n      err => this.messageService.add({ severity: 'error', summary: '', detail: err, life: this.DEFAULT_MSG_LIFE })\n    ));\n\n    this.subscription.add(this.topicService.getError().subscribe(\n      res => {\n        if (res) {\n          this.messageService.add({ severity: 'error', summary: '', detail: res.toString(), life: this.DEFAULT_MSG_LIFE });\n        }\n      },\n      err => this.messageService.add({ severity: 'error', summary: '', detail: err, life: this.DEFAULT_MSG_LIFE })\n    ));\n  }\n\n  /** @internal */\n  togglePanel() {\n    this.isPanelCollapsed = !this.isPanelCollapsed;\n    return false;\n  }\n\n  nodeSelect(event) {\n    this.endecapodService.Add(event.node.id);\n    console.log('nodeSelect: ' + this.nodePath(event.node).join(' > '));\n    this.isLoading.emit(true);\n  }\n\n  nodeUnselect(event) {\n    this.endecapodService.Remove(event.node.id);\n    this.isLoading.emit(true);\n  }\n\n  nodeExpand(event) {\n    this.expandedNodeIds.add(event.node.id);\n  }\n\n  nodeCollapse(event) {\n    this.expandedNodeIds.delete(event.node.id);\n  }\n\n  private nodePath(node: TreeNode): string[] {\n    const labels = [node.label];\n    while (node.parent) {\n      node = node.parent;\n      labels.push(node.label);\n    }\n    return labels.reverse();\n  }\n\n  private expandParents(nodes: TreeNode[]) {\n    nodes.forEach(node => {\n      node.selectable = true;\n      let parent = node.parent;\n      while (parent) {\n        parent.expanded = true;\n        this.expandedNodeIds.add(parent['id']);\n        parent = parent.parent;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<a class=\"ib-collapse-panel ib-filters {{isPanelCollapsed? 'collapsed': ''}}\" (click)=\"togglePanel()\"\n  [attr.aria-expanded]=\"!isPanelCollapsed\" href=\"#ib-topic-search\" role=\"button\" aria-controls=\"ib-topic-search\">\n  <i class=\"fa fa-list\"></i>\n  Topic Search\n  <i class=\"ib-angle-down-up\" aria-hidden=\"true\"></i>\n</a>\n<div class=\"row ib-padding-20\">\n  <div class=\"ib-topic-search\">\n    <div class=\"multi-collapse\" [collapse]=\"isPanelCollapsed\" [isAnimated]=\"true\" id=\"ib-topic-search\">\n\n      <p-tree [value]=\"topicTreeNodes\" selectionMode=\"checkbox\" [metaKeySelection]=\"false\" [(selection)]=\"selectedTopics\" [loading]=\"loading\"\n        (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\" (onNodeCollapse)=\"nodeCollapse($event)\" (onNodeExpand)=\"nodeExpand($event)\"\n        [filter]=\"topicTreeNodes ? true : false\" [filterPlaceholder]=\"'Find topics'\" [ptreeFilter]=\"topicTreeNodes\"></p-tree>\n    </div>\n  </div>\n</div>\n","import { TopicConfig } from './topic-config';\n\nexport class TopicServiceConfig {\n  constructor(\n  readonly endecapodUrl: string,\n  readonly awareUrl: string,\n  readonly topicConfig: TopicConfig,\n  readonly suppressedChips: number[]) {  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopicSearchPanelComponent } from './topic-search-panel/topic-search-panel.component';\nimport { TreeModule } from 'primeng/tree';\nimport { TopicService } from './service/topic.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { PtreeFilterDirective } from './directive/ptree-filter.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TreeModule,\n    CollapseModule.forRoot()\n  ],\n  declarations: [TopicSearchPanelComponent, PtreeFilterDirective],\n  exports: [TopicSearchPanelComponent, PtreeFilterDirective],\n  providers: [TopicService]\n})\nexport class TopicSearchModule { }\nexport { TopicService } from './service/topic.service';\nexport { TopicServiceConfig } from './model/topic-service-config';\nexport { TopicConfig } from './model/topic-config';\nexport { TaxtopicsProviderService } from './service/taxtopics-provider.service';\nexport { TaxtopicGroupInfo } from './service/taxtopics-provider.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2.TaxtopicsProviderService","i3","i4","i6.PtreeFilterDirective","i1","i2.TopicService"],"mappings":"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"}